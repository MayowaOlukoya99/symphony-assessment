{
  "stats": {
    "suites": 10,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-10T05:32:05.965Z",
    "end": "2022-10-10T05:32:15.753Z",
    "duration": 9788,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c11c835b-f81a-4301-9eee-801f9ab0a1f5",
      "title": "",
      "fullFile": "cypress/integration/cypress_api.spec.js",
      "file": "cypress/integration/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "15df6ce1-c5bd-456a-95bc-361432277edb",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {// subject is still $button\n});",
              "err": {},
              "uuid": "f89c2461-772f-4c62-85c5-bf75f75699e2",
              "parentUUID": "15df6ce1-c5bd-456a-95bc-361432277edb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f89c2461-772f-4c62-85c5-bf75f75699e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1378,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "91a2678f-61e6-47a3-9849-016804b83d4c",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "27f1e5d5-b0ae-40c8-ae68-10c26ea67308",
              "parentUUID": "91a2678f-61e6-47a3-9849-016804b83d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "ff4d8dc0-dd12-4abd-9db4-622643728f4d",
              "parentUUID": "91a2678f-61e6-47a3-9849-016804b83d4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "f1e2aef1-f56c-42da-925a-d3f0b32b4ffd",
              "parentUUID": "91a2678f-61e6-47a3-9849-016804b83d4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27f1e5d5-b0ae-40c8-ae68-10c26ea67308",
            "ff4d8dc0-dd12-4abd-9db4-622643728f4d",
            "f1e2aef1-f56c-42da-925a-d3f0b32b4ffd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "305e428b-344f-4bbc-b45e-a5030a78be1d",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 538,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "382c431f-9d2e-4ba3-8f87-7c3e29550559",
              "parentUUID": "305e428b-344f-4bbc-b45e-a5030a78be1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "382c431f-9d2e-4ba3-8f87-7c3e29550559"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99e979e5-22c9-4d1f-bc35-cb63d95b75a4",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "01d5d500-9670-448d-a38b-f1e526baf370",
              "parentUUID": "99e979e5-22c9-4d1f-bc35-cb63d95b75a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01d5d500-9670-448d-a38b-f1e526baf370"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55611f23-efb0-4fe8-9894-dd347715b58a",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 427,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
              "err": {},
              "uuid": "08272f10-d260-4a4e-b612-34a6c7a951e2",
              "parentUUID": "55611f23-efb0-4fe8-9894-dd347715b58a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08272f10-d260-4a4e-b612-34a6c7a951e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbf4ccdf-86e6-484a-8507-172cead6a2bf",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "f178d242-6de2-47e0-aa15-58860b29ccaa",
              "parentUUID": "cbf4ccdf-86e6-484a-8507-172cead6a2bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f178d242-6de2-47e0-aa15-58860b29ccaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 408,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d3e6ac22-7a63-4ec0-bf80-76b9a63b8dc9",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 315,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "5af93ad7-4f05-4358-8a02-84d6b4a0099e",
              "parentUUID": "d3e6ac22-7a63-4ec0-bf80-76b9a63b8dc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5af93ad7-4f05-4358-8a02-84d6b4a0099e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb80560a-6e13-4b5a-8eb7-9b0ca0cfcddf",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "7976ad85-bd89-43e7-9701-d3e2c8983151",
              "parentUUID": "eb80560a-6e13-4b5a-8eb7-9b0ca0cfcddf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7976ad85-bd89-43e7-9701-d3e2c8983151"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d702e91-add8-4980-8639-1993d2a3b1ee",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "7f91ab97-6f1f-4181-b12d-9308af9e1fcc",
              "parentUUID": "1d702e91-add8-4980-8639-1993d2a3b1ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f91ab97-6f1f-4181-b12d-9308af9e1fcc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "323be6a3-ac9a-48a9-a4ff-83cc7b35bcd3",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "1e57a9fa-6851-473d-85d7-80ea5615a239",
              "parentUUID": "323be6a3-ac9a-48a9-a4ff-83cc7b35bcd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e57a9fa-6851-473d-85d7-80ea5615a239"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 384,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}